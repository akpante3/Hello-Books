{
	"swagger": "2.0",
	"info": {
		"description": "This is an API for a system that allows efficient, cost-effective management libraries",
		"version": "1.0.0",
		"title": "Hello Books Application API",
		"contact": {
			"email": "email@address"
		},
		"license": {
			"name": "Apache 2.0",
			"url": "http://www.apache.org/licenses/LICENSE-2.0.html"
		}
	},
	"host": "localhost:4000",
	"basePath": "/api/v1",
	"securityDefinitions": {
		"Bearer": {
			"type": "apiKey",
			"name": "Authorization",
			"in": "header",
			"description": "For accessing the API routes other than Sign In and Sign Up, a valid JWT must be added in all the requests in the the Authorization Header"
		}
	},
	"tags": [
		{
			"name": "Base",
			"description": "Base Path for API endpoints"
		},
		{
			"name": "Users",
			"description": "Operations to be carried out only by the users"
		}
	],
	"schemes": [
		"https",
		"http"
	],
	"paths": {
		"/": {
			"get": {
				"tags": [
					"Base"
				],
				"summary": "API Endpoint Home Path",
				"produces": [
					"application/json"
				],
				"parameters": [],
				"responses": {
					"200": {
						"description": "Hello Books API",
						"schema": {
							"type": "object",
							"properties": {
								"message": {
									"type": "string",
									"example": "Hello Books API"
								}
							}
						}
					}
				}
			}
		},
		"/auth/signup": {
			"post": {
				"tags": [
					"Users"
				],
				"summary": "Handles the creation of new user",
				"description": "This endpoint creates a new user and persist input data to the database",
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "This is the request body object containing users' signup information",
						"required": true,
						"schema": {
							"$ref": "#/definitions/UserSignupRequest"
						}
					}
				],
				"responses": {
					"201": {
						"description": "User has been successfully resgistered"
					},
					"400": {
						"description": "Bad Request"
					},
					"409": {
						"description": "Email or Username exists"
					},
					"500": {
						"description": "Internal Server Error"
					}
				}
			}
		},
		"/auth/login": {
			"post": {
				"tags": [
					"Users"
				],
				"summary": "Handles users' sign in into the application",
				"description": "This endpoint sign in users after authentications",
				"consumes": [
					"application/json"
				],
				"produces": [
					"application/json"
				],
				"parameters": [
					{
						"in": "body",
						"name": "body",
						"description": "This is the request body object containing users' sign in information. UserLogin can be email or username",
						"required": true,
						"schema": {
							"$ref": "#/definitions/UserLoginRequest"
						}
					}
				],
				"responses": {
					"200": {
						"description": "General Success"
					},
					"400": {
						"description": "Bad Request"
					},
					"401": {
						"description": "User has entered incorrect details"
					},
					"404": {
						"description": "User Not Found"
					},
					"500": {
						"description": "Internal Server Error"
					}
				}
			}
		}, 
		"/books": {
			"post": {
				"tags": [
					"Books"
				],
				"summary": "Handles books' Adding a new book to the application",
				"description": "This endpoint adds a new book to the books to the library",
				"consumes": [
					"application/json"
				],
				"produces": [
					{
						"in": "body",
						"name": "body",
						"description": "This is the request body object containing books' addition information.",
						"required": true,
						"schema": {
							"$ref": "#/definitions/addBookRequest"
						}
					}
				],
				"responses": {
					"201": {
						"description": "Book created successfully"
					}
				}
			}
		}
	},
	"definitions": {
		"UserSignupRequest": {
			"title": "User Signup Request",
			"type": "object",
			"properties": {
				"username": {
					"description": "username of the user",
					"type": "string"
				},
				"email": {
					"description": "Email of the user",
					"type": "string"
				},
				"firstname": {
					"description": "First name of the user",
					"type": "string"
				},
				"lastname": {
					"description": "Last name of the user",
					"type": "string"
				},
				"password": {
					"description": "Password of the user",
					"type": "string"
				}
			},
			"example": {
				"username": "example",
				"email": "example@user.com",
				"firstname": "Marky",
				"lastname": "Steve",
				"password": "hellobooks"
			}
		},
		"UserLoginRequest": {
			"title": "User Login Request",
			"type": "object",
			"properties": {
				"userLogin": {
					"description": "Email or username of the user",
					"type": "string"
				},
				"password": {
					"description": "Password of the user",
					"type": "string"
				}
			},
			"example": {
				"userLogin": "example@user.com",
				"password": "hellobooks"
			}
		},
		"addBookRequest": {
			"title": "Add new book request",
			"type": "object",
			"properties": {
				"title": {
					"description": "Book title or name",
					"type": "string"
				},
				"body": {
					"description": "Some little details about the book",
					"type": "string"
				},
				"description": {
					"description": "Well descriptive details or information about the book and why it should be read",
					"type": "string"
				},
				"genre": {
					"description": "The style or category of the book",
					"type": "string"
				},
				"pages": {
					"description": "Number of pages the book has",
					"type": "Number"
				},
				"example": {
					"title": "Harry Potter",
					"body": "Harry Potter and the order of Phoenix",
					"description": "The book gives insight about Loyalty, friendship and bravery by young people. And also defeating evil and restoring glory to a great school",
					"genre": "Science Fiction",
					"pages": 475
				}
			}
		}
	}
}
